/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['feo.js']) {
  _$jscoverage['feo.js'] = [];
  _$jscoverage['feo.js'][2] = 0;
  _$jscoverage['feo.js'][15] = 0;
  _$jscoverage['feo.js'][16] = 0;
  _$jscoverage['feo.js'][19] = 0;
  _$jscoverage['feo.js'][20] = 0;
  _$jscoverage['feo.js'][21] = 0;
  _$jscoverage['feo.js'][25] = 0;
  _$jscoverage['feo.js'][29] = 0;
  _$jscoverage['feo.js'][30] = 0;
  _$jscoverage['feo.js'][34] = 0;
  _$jscoverage['feo.js'][35] = 0;
  _$jscoverage['feo.js'][36] = 0;
  _$jscoverage['feo.js'][37] = 0;
  _$jscoverage['feo.js'][40] = 0;
  _$jscoverage['feo.js'][41] = 0;
  _$jscoverage['feo.js'][50] = 0;
  _$jscoverage['feo.js'][51] = 0;
  _$jscoverage['feo.js'][62] = 0;
  _$jscoverage['feo.js'][63] = 0;
  _$jscoverage['feo.js'][65] = 0;
  _$jscoverage['feo.js'][71] = 0;
  _$jscoverage['feo.js'][72] = 0;
  _$jscoverage['feo.js'][73] = 0;
  _$jscoverage['feo.js'][74] = 0;
  _$jscoverage['feo.js'][75] = 0;
  _$jscoverage['feo.js'][78] = 0;
  _$jscoverage['feo.js'][80] = 0;
  _$jscoverage['feo.js'][81] = 0;
  _$jscoverage['feo.js'][89] = 0;
  _$jscoverage['feo.js'][90] = 0;
  _$jscoverage['feo.js'][95] = 0;
  _$jscoverage['feo.js'][97] = 0;
  _$jscoverage['feo.js'][98] = 0;
  _$jscoverage['feo.js'][100] = 0;
  _$jscoverage['feo.js'][101] = 0;
  _$jscoverage['feo.js'][102] = 0;
  _$jscoverage['feo.js'][107] = 0;
  _$jscoverage['feo.js'][108] = 0;
  _$jscoverage['feo.js'][109] = 0;
  _$jscoverage['feo.js'][110] = 0;
  _$jscoverage['feo.js'][118] = 0;
  _$jscoverage['feo.js'][119] = 0;
  _$jscoverage['feo.js'][128] = 0;
  _$jscoverage['feo.js'][129] = 0;
  _$jscoverage['feo.js'][137] = 0;
  _$jscoverage['feo.js'][138] = 0;
  _$jscoverage['feo.js'][140] = 0;
  _$jscoverage['feo.js'][144] = 0;
  _$jscoverage['feo.js'][145] = 0;
  _$jscoverage['feo.js'][147] = 0;
  _$jscoverage['feo.js'][148] = 0;
  _$jscoverage['feo.js'][149] = 0;
  _$jscoverage['feo.js'][152] = 0;
  _$jscoverage['feo.js'][154] = 0;
  _$jscoverage['feo.js'][155] = 0;
  _$jscoverage['feo.js'][163] = 0;
  _$jscoverage['feo.js'][164] = 0;
  _$jscoverage['feo.js'][169] = 0;
  _$jscoverage['feo.js'][171] = 0;
  _$jscoverage['feo.js'][172] = 0;
  _$jscoverage['feo.js'][174] = 0;
  _$jscoverage['feo.js'][175] = 0;
  _$jscoverage['feo.js'][176] = 0;
  _$jscoverage['feo.js'][181] = 0;
  _$jscoverage['feo.js'][182] = 0;
  _$jscoverage['feo.js'][183] = 0;
  _$jscoverage['feo.js'][190] = 0;
  _$jscoverage['feo.js'][191] = 0;
  _$jscoverage['feo.js'][194] = 0;
  _$jscoverage['feo.js'][195] = 0;
  _$jscoverage['feo.js'][196] = 0;
  _$jscoverage['feo.js'][198] = 0;
  _$jscoverage['feo.js'][203] = 0;
  _$jscoverage['feo.js'][204] = 0;
  _$jscoverage['feo.js'][205] = 0;
  _$jscoverage['feo.js'][207] = 0;
  _$jscoverage['feo.js'][208] = 0;
  _$jscoverage['feo.js'][209] = 0;
  _$jscoverage['feo.js'][211] = 0;
  _$jscoverage['feo.js'][212] = 0;
  _$jscoverage['feo.js'][214] = 0;
  _$jscoverage['feo.js'][216] = 0;
  _$jscoverage['feo.js'][217] = 0;
  _$jscoverage['feo.js'][219] = 0;
  _$jscoverage['feo.js'][220] = 0;
  _$jscoverage['feo.js'][227] = 0;
  _$jscoverage['feo.js'][228] = 0;
  _$jscoverage['feo.js'][230] = 0;
  _$jscoverage['feo.js'][231] = 0;
  _$jscoverage['feo.js'][235] = 0;
  _$jscoverage['feo.js'][239] = 0;
  _$jscoverage['feo.js'][240] = 0;
  _$jscoverage['feo.js'][246] = 0;
  _$jscoverage['feo.js'][247] = 0;
  _$jscoverage['feo.js'][253] = 0;
  _$jscoverage['feo.js'][254] = 0;
  _$jscoverage['feo.js'][256] = 0;
  _$jscoverage['feo.js'][260] = 0;
  _$jscoverage['feo.js'][261] = 0;
  _$jscoverage['feo.js'][262] = 0;
  _$jscoverage['feo.js'][264] = 0;
  _$jscoverage['feo.js'][265] = 0;
  _$jscoverage['feo.js'][267] = 0;
  _$jscoverage['feo.js'][269] = 0;
  _$jscoverage['feo.js'][270] = 0;
  _$jscoverage['feo.js'][278] = 0;
  _$jscoverage['feo.js'][279] = 0;
  _$jscoverage['feo.js'][284] = 0;
  _$jscoverage['feo.js'][289] = 0;
  _$jscoverage['feo.js'][290] = 0;
  _$jscoverage['feo.js'][296] = 0;
  _$jscoverage['feo.js'][297] = 0;
  _$jscoverage['feo.js'][298] = 0;
  _$jscoverage['feo.js'][300] = 0;
  _$jscoverage['feo.js'][301] = 0;
  _$jscoverage['feo.js'][302] = 0;
  _$jscoverage['feo.js'][306] = 0;
  _$jscoverage['feo.js'][309] = 0;
  _$jscoverage['feo.js'][310] = 0;
  _$jscoverage['feo.js'][313] = 0;
  _$jscoverage['feo.js'][314] = 0;
  _$jscoverage['feo.js'][316] = 0;
  _$jscoverage['feo.js'][322] = 0;
  _$jscoverage['feo.js'][324] = 0;
  _$jscoverage['feo.js'][325] = 0;
  _$jscoverage['feo.js'][327] = 0;
  _$jscoverage['feo.js'][329] = 0;
  _$jscoverage['feo.js'][331] = 0;
  _$jscoverage['feo.js'][333] = 0;
  _$jscoverage['feo.js'][340] = 0;
  _$jscoverage['feo.js'][341] = 0;
  _$jscoverage['feo.js'][344] = 0;
  _$jscoverage['feo.js'][346] = 0;
  _$jscoverage['feo.js'][347] = 0;
  _$jscoverage['feo.js'][348] = 0;
  _$jscoverage['feo.js'][349] = 0;
  _$jscoverage['feo.js'][351] = 0;
  _$jscoverage['feo.js'][354] = 0;
  _$jscoverage['feo.js'][356] = 0;
  _$jscoverage['feo.js'][357] = 0;
  _$jscoverage['feo.js'][358] = 0;
  _$jscoverage['feo.js'][359] = 0;
  _$jscoverage['feo.js'][362] = 0;
  _$jscoverage['feo.js'][366] = 0;
  _$jscoverage['feo.js'][367] = 0;
  _$jscoverage['feo.js'][368] = 0;
}
_$jscoverage['feo.js'][2]++;
var jsdom = require("jsdom"), async = require("async"), request = require("request"), fs = require("fs"), path = require("path"), compressor = require("node-minify"), htmlMinifier = require("html-minifier"), crypto = require("crypto"), url = require("url"), wrench = require("wrench"), _ = require("underscore");
_$jscoverage['feo.js'][15]++;
exports.isLocal = (function (target) {
  _$jscoverage['feo.js'][16]++;
  return /^http/.test(target)? false: true;
});
_$jscoverage['feo.js'][19]++;
exports.resolve = (function (root, base, target) {
  _$jscoverage['feo.js'][20]++;
  if (this.isLocal(base)) {
    _$jscoverage['feo.js'][21]++;
    return ! this.isLocal(target)? url.resolve(base, target): /^\//.test(target)? path.join(root, target): path.resolve(path.dirname(base), target);
  }
  else {
    _$jscoverage['feo.js'][25]++;
    return url.resolve(base, target);
  }
});
_$jscoverage['feo.js'][29]++;
exports.init = (function (config) {
  _$jscoverage['feo.js'][30]++;
  var dist = config.dist, distFiles = [], i, log = config.log;
  _$jscoverage['feo.js'][34]++;
  log && console.log("Cleaning dist : ");
  _$jscoverage['feo.js'][35]++;
  log && console.log("  " + dist);
  _$jscoverage['feo.js'][36]++;
  fs.existsSync(dist) && wrench.rmdirSyncRecursive(dist) && fs.rmdirSync(dist);
  _$jscoverage['feo.js'][37]++;
  fs.mkdirSync(dist);
});
_$jscoverage['feo.js'][40]++;
exports.optimizeScript = (function (config, window, callback) {
  _$jscoverage['feo.js'][41]++;
  var js = config.js || {}, compType = js.compressor || "yui-js", ignore = js.ignore || [], inline = js.inline === undefined? true: js.inline, root = js.root, dist = config.dist || "dist", $ = window.$, scripts = $("script").not((function () {
  _$jscoverage['feo.js'][50]++;
  var elem = $(this);
  _$jscoverage['feo.js'][51]++;
  return (this.src && ignore.indexOf(path.basename(this.src)) > -1)? true: ! this.src && $.trim(elem.text()) && ! inline? true: elem.data("feo") == "ignore"? true: this.type && this.type != "text/javascript"? true: false;
})).not(":last"), srcs = scripts.get(), htmlCharset = "utf8", that = this, log = config.log;
  _$jscoverage['feo.js'][62]++;
  log && console.log("Compaction scripts : ");
  _$jscoverage['feo.js'][63]++;
  async.map(srcs, (function (item, callback) {
  _$jscoverage['feo.js'][65]++;
  var src = item.src, type = item.type, charset = (item.charset || htmlCharset || "utf8").toLowerCase().replace(/-|_/g, ""), innerScript = $.trim($(item).text()), srcUrl;
  _$jscoverage['feo.js'][71]++;
  srcUrl = that.resolve(root, config.url, src);
  _$jscoverage['feo.js'][72]++;
  log && console.log("  " + (src? srcUrl: "inline"));
  _$jscoverage['feo.js'][73]++;
  if (! src && innerScript) {
    _$jscoverage['feo.js'][74]++;
    callback(null, innerScript);
    _$jscoverage['feo.js'][75]++;
    return;
  }
  _$jscoverage['feo.js'][78]++;
  that.isLocal(srcUrl)? fs.readFile(srcUrl, "utf8", (function (err, body) {
  _$jscoverage['feo.js'][80]++;
  log && err && console.log(err);
  _$jscoverage['feo.js'][81]++;
  callback(null, body);
})): request({uri: srcUrl, encoding: "utf8", proxy: config.proxy || null}, (function (err, request, body) {
  _$jscoverage['feo.js'][89]++;
  log && err && console.log(err);
  _$jscoverage['feo.js'][90]++;
  callback(null, body);
}));
}), (function (err, results) {
  _$jscoverage['feo.js'][95]++;
  var compressed = results.join(";\n");
  _$jscoverage['feo.js'][97]++;
  if (! config.suffix) {
    _$jscoverage['feo.js'][98]++;
    config.suffix = {};
  }
  _$jscoverage['feo.js'][100]++;
  config.suffix.js = crypto.createHash("md5").update(compressed).digest("hex");
  _$jscoverage['feo.js'][101]++;
  fs.writeFileSync(dist + "/feo." + config.suffix.js + ".unpack.js", compressed);
  _$jscoverage['feo.js'][102]++;
  new compressor.minify({type: compType, fileIn: dist + "/feo." + config.suffix.js + ".unpack.js", fileOut: dist + "/feo." + config.suffix.js + ".js", callback: (function (err) {
  _$jscoverage['feo.js'][107]++;
  log && err && console.log(err);
  _$jscoverage['feo.js'][108]++;
  scripts.remove();
  _$jscoverage['feo.js'][109]++;
  $("script.jsdom").remove();
  _$jscoverage['feo.js'][110]++;
  callback();
})});
}));
});
_$jscoverage['feo.js'][118]++;
exports.optimizeCss = (function (config, window, callback) {
  _$jscoverage['feo.js'][119]++;
  var css = config.css || {}, compType = css.compressor || "yui-css", ignore = css.ignore || [], inline = css.inline === undefined? true: css.inline, dist = config.dist, root = css.root, $ = window.$, links = $("link[href][rel=stylesheet],style").not((function () {
  _$jscoverage['feo.js'][128]++;
  var elem = $(this);
  _$jscoverage['feo.js'][129]++;
  return (this.href && ignore.indexOf(path.basename(this.href)) > -1)? true: ! this.href && $.trim(elem.text()) && ! inline? true: elem.data("feo") == "ignore"? true: false;
})), that = this, log = config.log;
  _$jscoverage['feo.js'][137]++;
  log && console.log("Compaction css : ");
  _$jscoverage['feo.js'][138]++;
  async.map(links.get(), (function (item, callback) {
  _$jscoverage['feo.js'][140]++;
  var href = item.href, innerStyle = $.trim($(item).text()), hrefUrl;
  _$jscoverage['feo.js'][144]++;
  hrefUrl = that.resolve(root, config.url, href);
  _$jscoverage['feo.js'][145]++;
  log && console.log("  " + (href? hrefUrl: "inline"));
  _$jscoverage['feo.js'][147]++;
  if (! href && innerStyle) {
    _$jscoverage['feo.js'][148]++;
    that.optimizeBackgroundImage(config, config.url, innerStyle, callback);
    _$jscoverage['feo.js'][149]++;
    return;
  }
  _$jscoverage['feo.js'][152]++;
  that.isLocal(hrefUrl)? fs.readFile(hrefUrl, "utf8", (function (err, body) {
  _$jscoverage['feo.js'][154]++;
  log && err && console.log(err);
  _$jscoverage['feo.js'][155]++;
  that.optimizeBackgroundImage(config, hrefUrl, body || "", callback);
})): request({uri: hrefUrl, encoding: "utf8", proxy: config.proxy || null}, (function (err, request, body) {
  _$jscoverage['feo.js'][163]++;
  log && err && console.log(err);
  _$jscoverage['feo.js'][164]++;
  that.optimizeBackgroundImage(config, hrefUrl, body || "", callback);
}));
}), (function (err, results) {
  _$jscoverage['feo.js'][169]++;
  var compressed = results.join("\n");
  _$jscoverage['feo.js'][171]++;
  if (! config.suffix) {
    _$jscoverage['feo.js'][172]++;
    config.suffix = {};
  }
  _$jscoverage['feo.js'][174]++;
  config.suffix.css = crypto.createHash("md5").update(compressed).digest("hex");
  _$jscoverage['feo.js'][175]++;
  fs.writeFileSync(dist + "/feo." + config.suffix.css + ".unpack.css", compressed);
  _$jscoverage['feo.js'][176]++;
  new compressor.minify({type: compType, fileIn: dist + "/feo." + config.suffix.css + ".unpack.css", fileOut: dist + "/feo." + config.suffix.css + ".css", callback: (function (err) {
  _$jscoverage['feo.js'][181]++;
  log && err && console.log(err);
  _$jscoverage['feo.js'][182]++;
  links.remove();
  _$jscoverage['feo.js'][183]++;
  callback();
})});
}));
});
_$jscoverage['feo.js'][190]++;
exports.optimizeBackgroundImage = (function (config, href, body, callback) {
  _$jscoverage['feo.js'][191]++;
  var css = config.css || {}, root = css.root, backgroundImages = (body.match(/url\([^\)]+\)/g) || []).map((function (str) {
  _$jscoverage['feo.js'][194]++;
  str = str.replace(/[\"\']/g, "");
  _$jscoverage['feo.js'][195]++;
  if (! /\.(jpg|gif|png|bmp)\)$/i.test(str)) {
    _$jscoverage['feo.js'][196]++;
    return "";
  }
  _$jscoverage['feo.js'][198]++;
  return str.match(/\(([^\)]+)\)/)[1];
})), that = this, log = config.log;
  _$jscoverage['feo.js'][203]++;
  log && console.log("Optimizing background-image :");
  _$jscoverage['feo.js'][204]++;
  async.map(backgroundImages, (function (item, callback) {
  _$jscoverage['feo.js'][205]++;
  var imageUrl;
  _$jscoverage['feo.js'][207]++;
  if (! item) {
    _$jscoverage['feo.js'][208]++;
    callback();
    _$jscoverage['feo.js'][209]++;
    return;
  }
  _$jscoverage['feo.js'][211]++;
  imageUrl = that.resolve(root, href, item);
  _$jscoverage['feo.js'][212]++;
  log && console.log("  " + imageUrl);
  _$jscoverage['feo.js'][214]++;
  that.isLocal(imageUrl)? fs.readFile(imageUrl, "binary", (function (err, bgBody) {
  _$jscoverage['feo.js'][216]++;
  log && err && console.log(err);
  _$jscoverage['feo.js'][217]++;
  var ext = item.match(/\.([^.]+)$/)[1], reg = new RegExp("url\\([\\'\\\"]?" + item + "[\\'\\\"]?\\)", "g");
  _$jscoverage['feo.js'][219]++;
  if (bgBody) {
    _$jscoverage['feo.js'][219]++;
    body = body.replace(reg, "url(data:image/" + ext + ";base64," + new Buffer(bgBody, "binary").toString("base64") + ")");
  }
  _$jscoverage['feo.js'][220]++;
  callback();
})): request({uri: imageUrl, encoding: "binary", proxy: config.proxy || null}, (function (err, request, bgBody) {
  _$jscoverage['feo.js'][227]++;
  log && err && console.log(err);
  _$jscoverage['feo.js'][228]++;
  var ext = item.match(/\.([^.]+)$/)[1], reg = new RegExp("url\\([\\'\\\"]?" + item + "[\\'\\\"]?\\)", "g");
  _$jscoverage['feo.js'][230]++;
  if (bgBody) {
    _$jscoverage['feo.js'][230]++;
    body = body.replace(reg, "url(data:image/" + ext + ";base64," + new Buffer(bgBody, "binary").toString("base64") + ")");
  }
  _$jscoverage['feo.js'][231]++;
  callback();
}));
}), (function (err, results) {
  _$jscoverage['feo.js'][235]++;
  callback(null, body);
}));
});
_$jscoverage['feo.js'][239]++;
exports.optimizeImage = (function (config, window, callback) {
  _$jscoverage['feo.js'][240]++;
  var image = config.image || {}, ignore = image.ignore || [], $ = window.$, root = image.root, imgs = $("img[src]").not((function () {
  _$jscoverage['feo.js'][246]++;
  var elem = $(this);
  _$jscoverage['feo.js'][247]++;
  return ignore.indexOf(path.basename(this.href)) > -1? true: elem.data("feo") == "ignore"? true: false;
})), that = this, log = config.log;
  _$jscoverage['feo.js'][253]++;
  log && console.log("Optimizing image : ");
  _$jscoverage['feo.js'][254]++;
  async.map(imgs.get(), (function (item, callback) {
  _$jscoverage['feo.js'][256]++;
  var src = item.src, ext = (src.match(/\.([^.]+)$/) || [])[1], imageUrl;
  _$jscoverage['feo.js'][260]++;
  if (! src || ! /^(jpg|gif|png|bmp)$/i.test(ext)) {
    _$jscoverage['feo.js'][261]++;
    callback();
    _$jscoverage['feo.js'][262]++;
    return;
  }
  _$jscoverage['feo.js'][264]++;
  imageUrl = that.resolve(root, config.url, src);
  _$jscoverage['feo.js'][265]++;
  log && console.log("  " + imageUrl);
  _$jscoverage['feo.js'][267]++;
  that.isLocal(imageUrl)? fs.readFile(imageUrl, "binary", (function (err, body) {
  _$jscoverage['feo.js'][269]++;
  if (body) {
    _$jscoverage['feo.js'][269]++;
    item.src = "data:image/" + ext + ";base64," + new Buffer(body, "binary").toString("base64");
  }
  _$jscoverage['feo.js'][270]++;
  callback();
})): request({uri: imageUrl, encoding: "binary", proxy: config.proxy || null}, (function (err, request, body) {
  _$jscoverage['feo.js'][278]++;
  if (body) {
    _$jscoverage['feo.js'][278]++;
    item.src = "data:image/" + ext + ";base64," + new Buffer(body, "binary").toString("base64");
  }
  _$jscoverage['feo.js'][279]++;
  callback();
}));
}), (function (err, results) {
  _$jscoverage['feo.js'][284]++;
  callback();
}));
});
_$jscoverage['feo.js'][289]++;
exports.optimizeHtml = (function (config, window, callback) {
  _$jscoverage['feo.js'][290]++;
  var $ = window.$, dist = config.dist, html, basename, log = config.log;
  _$jscoverage['feo.js'][296]++;
  log && console.log("Optimize HTML");
  _$jscoverage['feo.js'][297]++;
  $("head").append("<link type=\"text/css\" rel=\"stylesheet\" href=\"feo." + config.suffix.css + ".css\" >");
  _$jscoverage['feo.js'][298]++;
  html = "<!DOCTYPE html>\n<html>" + $("html").html() + "\n<script charset=\"utf-8\" src=\"feo." + config.suffix.js + ".js\" type=\"text/javascript\" ></script>\n</html>";
  _$jscoverage['feo.js'][300]++;
  basename = this.isLocal(config.url)? path.basename(config.url, ".html"): config.url.replace(/\.html$/, "").split("/").pop() || "index";
  _$jscoverage['feo.js'][301]++;
  fs.writeFileSync(dist + "/" + basename + ".unpack.html", html);
  _$jscoverage['feo.js'][302]++;
  fs.writeFileSync(dist + "/" + basename + ".html", htmlMinifier.minify(html, {removeComments: true, collapseWhitespace: true}));
  _$jscoverage['feo.js'][306]++;
  callback();
});
_$jscoverage['feo.js'][309]++;
exports.optimize = (function (config, callback) {
  _$jscoverage['feo.js'][310]++;
  var that = this, log = config.log;
  _$jscoverage['feo.js'][313]++;
  log && console.log("Target : ");
  _$jscoverage['feo.js'][314]++;
  log && console.log("  " + config.url);
  _$jscoverage['feo.js'][316]++;
  jsdom.env({html: config.url, scripts: ["http://code.jquery.com/jquery-1.8.0.min.js"], done: (function (errors, window) {
  _$jscoverage['feo.js'][322]++;
  var $ = window.$, htmlCharset = (($("meta[content*=charset]").attr("content") || "").match(/charset=([^;]+)/) || [])[1] || window.document.charset || "utf8";
  _$jscoverage['feo.js'][324]++;
  async.waterfall([(function (callback) {
  _$jscoverage['feo.js'][325]++;
  that.optimizeScript(config, window, callback);
}), (function (callback) {
  _$jscoverage['feo.js'][327]++;
  that.optimizeCss(config, window, callback);
}), (function (callback) {
  _$jscoverage['feo.js'][329]++;
  that.optimizeImage(config, window, callback);
}), (function (callback) {
  _$jscoverage['feo.js'][331]++;
  that.optimizeHtml(config, window, callback);
})], (function () {
  _$jscoverage['feo.js'][333]++;
  callback();
}));
})});
});
_$jscoverage['feo.js'][340]++;
exports.cli = (function (config) {
  _$jscoverage['feo.js'][341]++;
  var that = this, log = config.log;
  _$jscoverage['feo.js'][344]++;
  this.init(config);
  _$jscoverage['feo.js'][346]++;
  if (this.isLocal(config.url) && fs.statSync(config.url).isDirectory()) {
    _$jscoverage['feo.js'][347]++;
    fs.existFileSync && wrench.rmdirSyncRecursive(config.dist);
    _$jscoverage['feo.js'][348]++;
    wrench.copyDirSyncRecursive(config.url, config.dist);
    _$jscoverage['feo.js'][349]++;
    async.map(wrench.readdirSyncRecursive(config.dist).filter((function (val) {
  _$jscoverage['feo.js'][351]++;
  return /\.html/.test(val);
})), (function (item, callback) {
  _$jscoverage['feo.js'][354]++;
  var target = _.clone(config);
  _$jscoverage['feo.js'][356]++;
  target.url = path.resolve(config.dist, item);
  _$jscoverage['feo.js'][357]++;
  target.dist = path.dirname(path.resolve(config.dist, item));
  _$jscoverage['feo.js'][358]++;
  target.suffix = target.suffix || {};
  _$jscoverage['feo.js'][359]++;
  that.optimize(target, callback);
}), (function (err, results) {
  _$jscoverage['feo.js'][362]++;
  log && console.log("Finished!!");
}));
  }
  else {
    _$jscoverage['feo.js'][366]++;
    config.suffix = config.suffix || {};
    _$jscoverage['feo.js'][367]++;
    that.optimize(config, (function () {
  _$jscoverage['feo.js'][368]++;
  log && console.log("Finished!!");
}));
  }
});
_$jscoverage['feo.js'].source = ["","var jsdom = require('jsdom'),","  async = require('async'),","  request = require('request'),","  fs = require('fs'),","  path = require('path'),","  compressor = require('node-minify'),","  htmlMinifier = require('html-minifier'),","  crypto = require('crypto'),","  url = require('url'),","  wrench = require('wrench'),","  _ = require('underscore');","","","exports.isLocal = function( target ){","  return /^http/.test( target ) ? false : true;","}","","exports.resolve = function( root, base, target ){","  if(this.isLocal(base)){","    return !this.isLocal(target) ? url.resolve( base, target ) : ","            /^\\//.test( target ) ? path.join( root, target ) :","                                   path.resolve( path.dirname( base ), target );","  } else {","    return  url.resolve(base, target);","  }","}","","exports.init = function( config ){","  var dist = config.dist,","      distFiles = [],","      i,","      log = config.log;","  log &amp;&amp; console.log(\"Cleaning dist : \");","  log &amp;&amp; console.log(\"  \"+dist);","  fs.existsSync(dist) &amp;&amp; wrench.rmdirSyncRecursive(dist) &amp;&amp; fs.rmdirSync( dist );","  fs.mkdirSync(dist);","}","","exports.optimizeScript = function( config, window, callback){","  var js = config.js || {},","      compType = js.compressor || 'yui-js',","      ignore = js.ignore || [],","      inline = js.inline === undefined ? true : js.inline,","      root = js.root,","      dist = config.dist || 'dist',","      $ = window.$,","      scripts = $('script')","                .not(function(){","                  var elem = $(this);","                  return (this.src &amp;&amp; ignore.indexOf( path.basename( this.src ) ) &gt; -1) ? true : ","                         !this.src &amp;&amp; $.trim( elem.text() ) &amp;&amp; !inline ? true : ","                         elem.data(\"feo\") == \"ignore\" ? true : ","                         this.type &amp;&amp; this.type != \"text/javascript\" ? true : false;","","                }).not(':last'),","      srcs = scripts.get(),","      htmlCharset = 'utf8',","      that = this,","      log = config.log;","","  log &amp;&amp; console.log(\"Compaction scripts : \");","  async.map(srcs,","    function(item, callback){","      var src = item.src,","          type = item.type,","          charset = ( item.charset || htmlCharset || 'utf8' ).toLowerCase().replace(/-|_/g,''),","          innerScript = $.trim( $(item).text() ),","          srcUrl;","","      srcUrl = that.resolve( root, config.url, src );","      log &amp;&amp; console.log(\"  \"+(src ? srcUrl : \"inline\"));","      if( !src &amp;&amp; innerScript){","        callback(null, innerScript);","        return;","      }","","      that.isLocal(srcUrl) ? ","        fs.readFile( srcUrl, 'utf8', function(err, body ){","          log &amp;&amp; err &amp;&amp; console.log(err);","          callback( null, body );","        })","       : request({","          uri      : srcUrl,","          encoding : 'utf8',","          proxy    : config.proxy || null","        },","        function(err, request, body) {","          log &amp;&amp; err &amp;&amp; console.log(err);","          callback( null, body );","        });","","    },","    function(err, results){","      var compressed = results.join(';\\n');","","      if(!config.suffix) {","        config.suffix = {};","      }","      config.suffix.js = crypto.createHash('md5').update(compressed).digest('hex');","      fs.writeFileSync(dist+'/feo.'+config.suffix.js+'.unpack.js', compressed);","      new compressor.minify({","        type: compType,","        fileIn: dist+'/feo.'+config.suffix.js+'.unpack.js',","        fileOut: dist+'/feo.'+config.suffix.js+'.js',","        callback: function(err){","          log &amp;&amp; err &amp;&amp; console.log(err);","          scripts.remove();","          $('script.jsdom').remove();","          callback();","        }","      });","    }","  );","","}","","exports.optimizeCss = function(config, window, callback){","  var css = config.css || {},","      compType = css.compressor  || 'yui-css',","      ignore = css.ignore || [],","      inline = css.inline === undefined ? true : css.inline,","      dist = config.dist,","      root = css.root,","      $ = window.$,","      links = $('link[href][rel=stylesheet],style')","          .not(function(){","              var elem = $(this);","              return (this.href &amp;&amp; ignore.indexOf( path.basename( this.href ) ) &gt; -1) ? true : ","                     !this.href &amp;&amp; $.trim( elem.text() ) &amp;&amp; !inline ? true : ","                     elem.data(\"feo\") == \"ignore\" ? true : false;","          }),","      that = this,","      log = config.log;","","","  log &amp;&amp; console.log(\"Compaction css : \");","  async.map(links.get(),","    function(item, callback){","      var href = item.href,","          innerStyle = $.trim( $(item).text() ),","          hrefUrl;","","      hrefUrl = that.resolve( root, config.url, href );","      log &amp;&amp; console.log(\"  \"+ (href ? hrefUrl : \"inline\"));","","      if( !href &amp;&amp; innerStyle){","        that.optimizeBackgroundImage( config, config.url, innerStyle, callback );","        return;","      }","","      that.isLocal(hrefUrl) ? ","        fs.readFile( hrefUrl, 'utf8', function(err, body){","          log &amp;&amp; err &amp;&amp; console.log(err);","          that.optimizeBackgroundImage( config, hrefUrl, body || '', callback );","        })","      : request({","          uri : hrefUrl,","          encoding : 'utf8',","          proxy : config.proxy || null","        },","        function(err, request, body){","          log &amp;&amp; err &amp;&amp; console.log(err);","          that.optimizeBackgroundImage( config, hrefUrl, body || '', callback );","        });","","    },","    function(err, results){","      var compressed = results.join('\\n');","","      if(!config.suffix) {","        config.suffix = {};","      }","      config.suffix.css = crypto.createHash('md5').update(compressed).digest('hex');","      fs.writeFileSync(dist+'/feo.'+config.suffix.css+'.unpack.css', compressed);","      new compressor.minify({","        type: compType,","        fileIn: dist+'/feo.'+config.suffix.css+'.unpack.css',","        fileOut: dist+'/feo.'+config.suffix.css+'.css',","        callback: function(err){","          log &amp;&amp; err &amp;&amp; console.log(err);","          links.remove();","          callback();","        }","      });","    }","  );","}","","exports.optimizeBackgroundImage = function( config, href, body, callback){","  var css = config.css || {},","      root = css.root,","      backgroundImages = (body.match(/url\\([^\\)]+\\)/g)||[]).map(function(str){","        str = str.replace(/[\\\"\\']/g,'');","        if(!/\\.(jpg|gif|png|bmp)\\)$/i.test(str)){","          return \"\";","        }","        return str.match(/\\(([^\\)]+)\\)/)[1];","      }),","      that = this,","      log = config.log;","","  log &amp;&amp; console.log(\"Optimizing background-image :\");","  async.map(backgroundImages, function(item, callback){","    var imageUrl;","","    if(!item){","      callback();","      return;","    }","    imageUrl = that.resolve( root, href, item );","    log &amp;&amp; console.log(\"  \"+ imageUrl);","","    that.isLocal(imageUrl) ? ","      fs.readFile( imageUrl, 'binary', function(err, bgBody){","        log &amp;&amp; err &amp;&amp; console.log(err);","        var ext = item.match(/\\.([^.]+)$/)[1],","            reg = new RegExp(\"url\\\\([\\\\'\\\\\\\"]?\"+item+\"[\\\\'\\\\\\\"]?\\\\)\", \"g\");","        if(bgBody) body = body.replace(reg, \"url(data:image/\"+ext+\";base64,\"+(new Buffer(bgBody, 'binary').toString('base64'))+\")\");","        callback();","      }) ","    : request({","        uri : imageUrl,","        encoding : 'binary',","        proxy : config.proxy || null","      },function(err, request, bgBody){","        log &amp;&amp; err &amp;&amp; console.log(err);","        var ext = item.match(/\\.([^.]+)$/)[1],","            reg = new RegExp(\"url\\\\([\\\\'\\\\\\\"]?\"+item+\"[\\\\'\\\\\\\"]?\\\\)\", \"g\"); ","        if(bgBody) body = body.replace(reg, \"url(data:image/\"+ext+\";base64,\"+(new Buffer(bgBody, 'binary').toString('base64'))+\")\");","        callback();","      });","","  }, function(err, results){","    callback( null, body );","  });","}","","exports.optimizeImage = function( config, window, callback ){","  var image = config.image || {},","      ignore = image.ignore || [],","      $ = window.$,","      root = image.root,","      imgs = $('img[src]')","          .not(function(){","              var elem = $(this);","              return ignore.indexOf( path.basename( this.href ) ) &gt; -1 ? true : ","                     elem.data(\"feo\") == \"ignore\" ? true : false;","          }),","      that = this,","      log = config.log;","","  log &amp;&amp; console.log(\"Optimizing image : \");","  async.map(imgs.get(),","    function(item, callback){","      var src = item.src,","          ext = (src.match(/\\.([^.]+)$/)||[])[1],","          imageUrl;","","      if(!src || !/^(jpg|gif|png|bmp)$/i.test(ext)){","        callback();","        return;","      }","      imageUrl = that.resolve( root, config.url, src );","      log &amp;&amp; console.log(\"  \"+ imageUrl);","","      that.isLocal(imageUrl) ?","        fs.readFile( imageUrl, 'binary', function(err, body){","          if(body) item.src = \"data:image/\"+ext+\";base64,\"+(new Buffer(body, 'binary').toString('base64'));","          callback();","        })","      : request({","          uri : imageUrl,","          encoding : 'binary',","          proxy : config.proxy || null","        },","        function(err, request, body){","          if(body) item.src = \"data:image/\"+ext+\";base64,\"+(new Buffer(body, 'binary').toString('base64'));","          callback();","        });","","    },","    function(err, results){","        callback();","    }","  );","}","","exports.optimizeHtml = function( config, window, callback ){","  var $ = window.$,","      dist = config.dist,","      html,","      basename,","      log = config.log;","","  log &amp;&amp; console.log(\"Optimize HTML\");","  $('head').append('&lt;link type=\"text/css\" rel=\"stylesheet\" href=\"feo.'+config.suffix.css+'.css\" &gt;');","  html = '&lt;!DOCTYPE html&gt;\\n&lt;html&gt;'+$('html').html()+'\\n&lt;script charset=\"utf-8\" src=\"feo.'+config.suffix.js+'.js\" type=\"text/javascript\" &gt;&lt;/script&gt;\\n&lt;/html&gt;';","","  basename = this.isLocal(config.url) ? path.basename(config.url, '.html') : config.url.replace(/\\.html$/,'').split(\"/\").pop() || 'index';","  fs.writeFileSync(dist+'/'+basename+'.unpack.html', html);","  fs.writeFileSync(dist+'/'+basename+'.html', htmlMinifier.minify(html,{","    removeComments: true,","    collapseWhitespace: true","  }));","  callback();","}","","exports.optimize = function(config, callback ){","  var that = this,","      log = config.log;","","  log &amp;&amp; console.log(\"Target : \");","  log &amp;&amp; console.log(\"  \"+config.url);","","  jsdom.env({","    html: config.url,","    scripts: [","      'http://code.jquery.com/jquery-1.8.0.min.js'","    ],","    done: function(errors, window) {","      var $ = window.$,","          htmlCharset = (($('meta[content*=charset]').attr('content')||'').match(/charset=([^;]+)/)||[])[1]||window.document.charset||'utf8'; ","      async.waterfall([function(callback){","        that.optimizeScript( config, window, callback );","      },function(callback){","        that.optimizeCss( config, window, callback );","      },function(callback){","        that.optimizeImage( config, window, callback );","      },function(callback){","        that.optimizeHtml( config, window, callback );","      }],function(){","        callback();","      });      ","    }","  });","","}","","exports.cli = function( config ){","    var that = this,","        log = config.log;","","    this.init( config );","","    if( this.isLocal(config.url) &amp;&amp; fs.statSync(config.url).isDirectory() ){","      fs.existFileSync &amp;&amp; wrench.rmdirSyncRecursive(config.dist);","      wrench.copyDirSyncRecursive(config.url, config.dist);","      async.map(","        wrench.readdirSyncRecursive(config.dist).filter(function(val){","          return /\\.html/.test( val );","        }),","        function( item, callback ){","          var target = _.clone(config);","","          target.url = path.resolve( config.dist, item );","          target.dist = path.dirname( path.resolve( config.dist, item ) );","          target.suffix = target.suffix || {};","          that.optimize( target, callback);","        },","        function(err, results ){","          log &amp;&amp; console.log(\"Finished!!\");","        }","      );","    } else {","      config.suffix = config.suffix || {};","      that.optimize( config, function(){","        log &amp;&amp; console.log(\"Finished!!\");","      });","    }","}"];
